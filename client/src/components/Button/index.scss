@use './variables' as *;
@use '~@/style/globals';
@use 'sass:color';
@use 'sass:map';

.Button {
    $block: &;

    display: inline-block;
    padding: $padding-y $padding-x;
    border: $border-width solid;
    border-radius: $border-radius;
    font-size: 1rem;
    line-height: 1.25;
    text-decoration: none;
    cursor: pointer;
    transition: all 300ms;

    & + & {
        margin-left: 5px;
    }

    &:hover,
    &:focus {
        outline: 0;
    }

    //
    // - Disabled
    //

    &--disabled {
        cursor: not-allowed;
        opacity: 0.5;
    }

    //
    // - Loading
    //

    &--loading {
        cursor: wait;
        opacity: 0.75;
    }

    //
    // - Ic√¥ne
    //

    &::before,
    &__icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 1.1em;
        height: 1.1em;
        font-size: 1.1em;
        line-height: 1.35em;
        text-align: center;
        vertical-align: -0.05rem;
    }

    &__icon + &__content {
        margin-left: $icon-margin;
    }

    //
    // - Variantes
    //

    // stylelint-disable-next-line scss/dollar-variable-first-in-block, order/order
    $variants: (
        default: $default-variant,
        primary: $primary-variant,
        secondary: $secondary-variant,
        success: $success-variant,
        warning: $warning-variant,
        danger: $danger-variant,
    );

    @each $name, $variant in $variants {
        // stylelint-disable-next-line scss/dollar-variable-pattern
        $--modifier: if($name == 'default', null, --#{$name});

        &#{$--modifier} {
            border-color: map.get($variant, border-color);
            background: map.get($variant, background);
            color: map.get($variant, color);

            &:hover,
            &:focus {
                border-color: map.get($variant, focused-border-color);
                background-color: map.get($variant, focused-background);
                color: map.get($variant, focused-color);
            }

            &:active {
                border-color: map.get($variant, active-border-color);
                background-color: map.get($variant, active-background);
                color: map.get($variant, active-color);
            }

            &#{$block}--disabled {
                &,
                &:hover,
                &:focus,
                &:active {
                    border-color: map.get($variant, border-color);
                    background-color: map.get($variant, background);
                    color: map.get($variant, color);
                }
            }
        }
    }
}
