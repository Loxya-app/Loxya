diff --git a/node_modules/vue-tables-2-premium/compiled/components/VtClientTable.js b/node_modules/vue-tables-2-premium/compiled/components/VtClientTable.js
index 98ab81c..0ae217a 100644
--- a/node_modules/vue-tables-2-premium/compiled/components/VtClientTable.js
+++ b/node_modules/vue-tables-2-premium/compiled/components/VtClientTable.js
@@ -103,6 +103,9 @@ var _default2 = {
     selectAllRows: function selectAllRows() {
       return this.$refs.table.selectAllRows();
     },
+    setVisibleColumns: function setVisibleColumns(columns) {
+      return this.$refs.table.setVisibleColumns(columns);
+    },
     setCustomFilters: function setCustomFilters(params) {
       var sendRequest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
       return this.$refs.table.setCustomFilters(params, sendRequest);
diff --git a/node_modules/vue-tables-2-premium/compiled/components/VtServerTable.js b/node_modules/vue-tables-2-premium/compiled/components/VtServerTable.js
index 0ada49a..8089c52 100644
--- a/node_modules/vue-tables-2-premium/compiled/components/VtServerTable.js
+++ b/node_modules/vue-tables-2-premium/compiled/components/VtServerTable.js
@@ -125,6 +125,9 @@ var _default2 = {
     selectAllRows: function selectAllRows() {
       return this.$refs.table.selectAllRows();
     },
+    setVisibleColumns: function setVisibleColumns(columns) {
+      return this.$refs.table.setVisibleColumns(columns);
+    },
     getRequestParams: function getRequestParams() {
       return this.$refs.table.getRequestParams();
     },
diff --git a/node_modules/vue-tables-2-premium/compiled/config/defaults.js b/node_modules/vue-tables-2-premium/compiled/config/defaults.js
index 1f5e00f..ec27762 100644
--- a/node_modules/vue-tables-2-premium/compiled/config/defaults.js
+++ b/node_modules/vue-tables-2-premium/compiled/config/defaults.js
@@ -116,6 +116,7 @@ module.exports = function () {
     rowClassCallback: false,
     preserveState: false,
     saveState: false,
+    saveSearch: false,
     storage: "local",
     columnsClasses: {},
     summary: false,
diff --git a/node_modules/vue-tables-2-premium/compiled/methods/init-state.js b/node_modules/vue-tables-2-premium/compiled/methods/init-state.js
index ddd9559..2a53827 100644
--- a/node_modules/vue-tables-2-premium/compiled/methods/init-state.js
+++ b/node_modules/vue-tables-2-premium/compiled/methods/init-state.js
@@ -1,6 +1,6 @@
 "use strict";
 
-module.exports = function () {
+module.exports = function (persist = true) {
   var state = {
     page: 1,
     query: this.query,
@@ -8,6 +8,15 @@ module.exports = function () {
     perPage: this.opts.perPage,
     customQueries: this.customQueries
   };
-  this.storage.setItem(this.stateKey, JSON.stringify(state));
+
+  if (!persist || !this.opts.saveState) {
+    return state;
+  }
+
+  var savedState = this.opts.saveSearch ? state : Object.fromEntries(
+    Object.entries(state).filter(([key]) => key !== 'query')
+  );
+  this.storage.setItem(this.stateKey, JSON.stringify(savedState));
+
   return state;
 };
\ No newline at end of file
diff --git a/node_modules/vue-tables-2-premium/compiled/methods/set-visible-columns.js b/node_modules/vue-tables-2-premium/compiled/methods/set-visible-columns.js
new file mode 100644
index 0000000..2263c1c
--- /dev/null
+++ b/node_modules/vue-tables-2-premium/compiled/methods/set-visible-columns.js
@@ -0,0 +1,17 @@
+"use strict";
+
+module.exports = function (columns) {
+  var _this = this;
+
+  this.userControlsColumns = true;
+  this.userColumnsDisplay = columns.length === 0
+    ? JSON.parse(JSON.stringify(this.allColumns))
+    : columns;
+
+  this.updateState('userControlsColumns', true);
+  this.updateState('userColumnsDisplay', this.userColumnsDisplay);
+
+  this.$nextTick(function () {
+    _this._setFiltersDOM(_this.query);
+  });
+};
diff --git a/node_modules/vue-tables-2-premium/compiled/methods/update-state.js b/node_modules/vue-tables-2-premium/compiled/methods/update-state.js
index 9709590..2df3135 100644
--- a/node_modules/vue-tables-2-premium/compiled/methods/update-state.js
+++ b/node_modules/vue-tables-2-premium/compiled/methods/update-state.js
@@ -1,14 +1,23 @@
 "use strict";
 
 module.exports = function (key, value) {
-  if (!this.opts.saveState || !this.activeState) return;
+  if (!this.opts.saveState || !this.activeState) {
+    return;
+  }
 
+  var newStateRaw = this.initState(false);
   try {
-    var currentState = JSON.parse(this.storage.getItem(this.stateKey));
+    newStateRaw = Object.assign({}, newStateRaw, JSON.parse(this.storage.getItem(this.stateKey)));
   } catch (e) {
-    var currentState = this.initState();
   }
 
-  currentState[key] = value;
-  this.storage.setItem(this.stateKey, JSON.stringify(currentState));
+  var newState = this.opts.saveSearch ? newStateRaw : Object.fromEntries(
+    Object.entries(newStateRaw).filter(([key]) => key !== 'query')
+  );
+
+  if (this.opts.saveSearch || key !== 'query') {
+    newState[key] = value;
+  }
+
+  this.storage.setItem(this.stateKey, JSON.stringify(newState));
 };
\ No newline at end of file
diff --git a/node_modules/vue-tables-2-premium/compiled/mixins/methods.js b/node_modules/vue-tables-2-premium/compiled/mixins/methods.js
index 82c5fc7..67e83a9 100644
--- a/node_modules/vue-tables-2-premium/compiled/mixins/methods.js
+++ b/node_modules/vue-tables-2-premium/compiled/mixins/methods.js
@@ -41,6 +41,7 @@ module.exports = {
   columnClass: require('../methods/column-class'),
   getName: require('../methods/get-name'),
   toggleColumn: require('../methods/toggle-column'),
+  setVisibleColumns: require('../methods/set-visible-columns'),
   setUserMultiSort: require('../methods/set-user-multi-sort'),
   _cellClasses: require('../methods/cell-classes'),
   _setFiltersDOM: require('../methods/set-filters-dom'),
diff --git a/node_modules/vue-tables-2-premium/compiled/v-client-table.js b/node_modules/vue-tables-2-premium/compiled/v-client-table.js
index f8f8409..19711ef 100644
--- a/node_modules/vue-tables-2-premium/compiled/v-client-table.js
+++ b/node_modules/vue-tables-2-premium/compiled/v-client-table.js
@@ -189,7 +189,9 @@ exports.install = function (Vue, globalOptions, useVuex) {
         link.remove();
       },
       loadState: function loadState() {
-        if (!this.opts.saveState) return;
+        if (!this.opts.saveState) {
+            return;
+        }
 
         if (!this.storage.getItem(this.stateKey)) {
           this.initState();
@@ -197,7 +199,12 @@ exports.install = function (Vue, globalOptions, useVuex) {
           return;
         }
 
-        var state = JSON.parse(this.storage.getItem(this.stateKey));
+        var persistedState = JSON.parse(this.storage.getItem(this.stateKey));
+        if (!this.opts.saveSearch) {
+            delete persistedState.query;
+        }
+
+        var state = Object.assign({}, this.initState(false), persistedState);
         if (this.opts.filterable) this.setFilter(state.query);
         this.setOrder(state.orderBy.column, state.orderBy.ascending);
 
diff --git a/node_modules/vue-tables-2-premium/compiled/v-server-table.js b/node_modules/vue-tables-2-premium/compiled/v-server-table.js
index 0dcfc3d..899946c 100644
--- a/node_modules/vue-tables-2-premium/compiled/v-server-table.js
+++ b/node_modules/vue-tables-2-premium/compiled/v-server-table.js
@@ -119,7 +119,9 @@ exports.install = function (Vue, globalOptions, useVuex) {
       loadState: function loadState() {
         var _this = this;
 
-        if (!this.opts.saveState) return;
+        if (!this.opts.saveState) {
+            return;
+        }
 
         if (!this.storage.getItem(this.stateKey)) {
           this.initState();
@@ -127,7 +129,12 @@ exports.install = function (Vue, globalOptions, useVuex) {
           return;
         }
 
-        var state = JSON.parse(this.storage.getItem(this.stateKey));
+        var persistedState = JSON.parse(this.storage.getItem(this.stateKey));
+        if (!this.opts.saveSearch) {
+            delete persistedState.query;
+        }
+
+        var state = Object.assign({}, this.initState(false), persistedState);
 
         if (this.vuex) {
           this.commit("SET_STATE", {
